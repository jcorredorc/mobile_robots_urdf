<?xml version="1.0"?>
<robot name="sensors_diff_robot" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="laser_visual" default="true"/> <!-- With true, blue rays are shown in Gazebo-->
  <xacro:arg name="camera_visual" default="false"/> <!-- With true, what the camera sees is shown en Gazebo-->
  

  <material name="orange"> <!-- Custom color (for RViz) -->
    <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
  </material>

  <gazebo reference="base_link">
    <material>Gazebo/Red</material> <!-- Color of the base link in Gazebo -->
  </gazebo>

  <gazebo reference="wheel_left_link"> <!-- Physical properties setup -->
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="wheel_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="caster_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/White</material>
  </gazebo>


  <gazebo>
    <plugin name="diff_controller" filename="libgazebo_ros_diff_drive.so"> <!-- Plugin for a differential mobile robot -->
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource> <!-- world or encoder -->
      <publishOdomTF>true</publishOdomTF> <!-- Publish the fixed frame called odom, default = true-->
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF> <!-- default = false. To show the spining wheels attached to the robot. Thus, joint_state_publisher node must be omitted -->
      <publishTf>true</publishTf> <!-- default = true-->
      <publishWheelJointState>false</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.160</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>

  <!-- Only the Hokuyo mesh is used. The used parameters are given by: https://emanual.robotis.com/docs/en/platform/turtlebot3/appendix_lds_01/ -->
 <!-- My robot Sensor Plugins -->
 <xacro:macro name="my_robot_sensors">
  <gazebo reference="base_scan">
    <sensor type="ray" name="hokuyo_LIDAR_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution><!-- deg-->
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="laser_scan_controller" filename="libgazebo_ros_laser.so"> <!-- Plugin for a LIDAR sensor -->
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>


  <!-- A Raspberry Pi Camera v2.1 is simulated. Link : https://www.raspberrypi.org/documentation/hardware/camera/-->
  <gazebo reference="camera_rgb_frame">
    <sensor type="camera" name="Pi_camera">
      <always_on>true</always_on>
      <visualize>$(arg camera_visual)</visualize>
      <camera>
          <horizontal_fov>1.085595</horizontal_fov><!--rad-->
          <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.03</near>
              <far>100</far>
          </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so"> <!-- Plugin for a monocular camera -->
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_joint</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
 </xacro:macro>

</robot>
