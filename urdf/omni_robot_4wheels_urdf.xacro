<?xml version="1.0" ?>
<robot name="omni4wheels" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="robot_ns" default="omni"/>
  <!--xacro:arg name="pi" default="3.14159"/-->
  <xacro:include filename="$(find my_ugv_description)/urdf/omni_robot_4wheels_gazebo.xacro"/>

  <!-- Robot Gazebo Controller -->
  <xacro:servomotor_controller />


  <!-- Robot Definition. Note: Since a controller is used for each wheel, the ns is used for a correct robot visualization in RViz when using several robots -->
  <link name="$(arg robot_ns)/base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="$(arg robot_ns)/base_footprint"/>
    <child link="$(arg robot_ns)/base_link"/>
    <origin xyz="0.0 0.0 0.04" rpy="0 0 0"/>
  </joint>

  <link name="$(arg robot_ns)/base_link">
    <visual>
      <origin xyz="0 0 0.025" rpy="0 0 0"/>
      <geometry>
        <box size="0.24 0.16 0.02"/><!-- Main block -->
      </geometry>
      <material name="blue">
        <color rgba="0.0 0.0 ${250/255} 1.0"/> <!-- Definition of the blue color (for RViz) -->
      </material>
    </visual>
    <!-- Frontal part to define the robot orientation and motors -->
    <visual>
      <origin xyz="0.11 0 0.04" rpy="0 0 0"/>
      <geometry>
        <box size="0.02 0.08 0.01"/>
      </geometry>
    </visual>
    <visual>
      <origin xyz="0.08 0.06 0" rpy="1.57 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.015"/>
      </geometry>
    </visual>
    <visual>
      <origin xyz="0.08 -0.06 0" rpy="1.57 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.015"/>
      </geometry>
    </visual>
    <visual>
      <origin xyz="-0.08 -0.06 0" rpy="1.57 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.015"/>
      </geometry>
    </visual>
    <visual>
      <origin xyz="-0.08 0.06 0" rpy="1.57 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.015"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.24 0.16 0.075"/> <!--For an omnidirectional robot, the base_link must touch the ground. Different from visual tag -->
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="8.25e-1"/>
      <inertia ixx="2.133" ixy="0" ixz="0" iyy="4.266" iyz="0" izz="5.546" /><!-- To obtain an acceptable motion, inertia must be large enough, not the corresponding collision body -->
    </inertial>
  </link>


  <!-- Wheels definition (joints and links) -->
  <joint name="wheel1_joint" type="continuous"> <!-- Front left wheel -->
    <parent link="$(arg robot_ns)/base_link"/>
    <child link="$(arg robot_ns)/wheel1_link"/>
    <origin xyz="0.08 0.12 0" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
    <!--dynamics damping="0.0" friction="0.0"/--><!-- Due to the wheel will not touch the ground, this parameter may be ommited-->
  </joint>

  <link name="$(arg robot_ns)/wheel1_link">
    <visual>
      <origin xyz="0 0 0" rpy="-1.57 0 0"/>
      <geometry>
        <mesh filename="package://my_ugv_description/meshes/left_mecanum_wheel.dae" scale="0.8 0.8 0.8"/> <!-- If scale=0.8, r=0.04 l=0.06 -->
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.035"/> <!-- To avoid a disturbance on the mobile robot, the wheel must not touch the ground -->
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="1e-1" />
      <inertia ixx="6.1e-5" ixy="0" ixz="0" iyy="6.1e-5" iyz="0" izz="6.1e-5" /><!-- Using r=0.035 -->
    </inertial>
  </link>
  
  <joint name="wheel2_joint" type="continuous"> <!-- Front right wheel -->
    <parent link="$(arg robot_ns)/base_link"/>
    <child link="$(arg robot_ns)/wheel2_link"/>
    <origin xyz="0.08 -0.12 0" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="$(arg robot_ns)/wheel2_link">
    <visual>
      <origin xyz="0 0 0" rpy="-1.57 0 0"/>
      <geometry>
        <mesh filename="package://my_ugv_description/meshes/right_mecanum_wheel.dae" scale="0.8 0.8 0.8"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.035"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="1e-1" />
      <inertia ixx="6.1e-5" ixy="0" ixz="0" iyy="6.1e-5" iyz="0" izz="6.1e-5" />
    </inertial>
  </link>

  <joint name="wheel3_joint" type="continuous"> <!-- Back right wheel -->
    <parent link="$(arg robot_ns)/base_link"/>
    <child link="$(arg robot_ns)/wheel3_link"/>
    <origin xyz="-0.08 -0.12 0" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="$(arg robot_ns)/wheel3_link">
    <visual>
      <origin xyz="0 0 0" rpy="-1.57 0 0"/>
      <geometry>
        <mesh filename="package://my_ugv_description/meshes/left_mecanum_wheel.dae" scale="0.8 0.8 0.8"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.035"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="1e-1" />
      <inertia ixx="6.1e-5" ixy="0" ixz="0" iyy="6.1e-5" iyz="0" izz="6.1e-5" />
    </inertial>
  </link>

  <joint name="wheel4_joint" type="continuous"> <!-- Back left wheel -->
    <parent link="$(arg robot_ns)/base_link"/>
    <child link="$(arg robot_ns)/wheel4_link"/>
    <origin xyz="-0.08 0.12 0" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <link name="$(arg robot_ns)/wheel4_link">
    <visual>
      <origin xyz="0 0 0" rpy="-1.57 0 0"/>
      <geometry>
        <mesh filename="package://my_ugv_description/meshes/right_mecanum_wheel.dae" scale="0.8 0.8 0.8"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.035"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="1e-1" />
      <inertia ixx="6.1e-5" ixy="0" ixz="0" iyy="6.1e-5" iyz="0" izz="6.1e-5" />
    </inertial>
  </link>


  <!-- Transmisisons of each wheel joint -->
  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel1_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface><!-- Since hardware_interface::VelocityJointInterface is not fully implemented, we will use EffortJointInterface -->
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <!--mechanicalReduction>1</mechanicalReduction--><!-- This tag does not any change in simulation -->
    </actuator>
  </transmission>
  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel2_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <transmission name="tran3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel3_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor3">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <transmission name="tran4">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel4_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor4">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>

</robot>
